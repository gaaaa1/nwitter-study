[{"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\index.js":"1","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\components\\App.js":"2","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\components\\Router.js":"3","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\routes\\Home.js":"4","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\routes\\Auth.js":"5","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\fbase.js":"6"},{"size":206,"mtime":1609596830289,"results":"7","hashOfConfig":"8"},{"size":676,"mtime":1609666495854,"results":"9","hashOfConfig":"8"},{"size":761,"mtime":1609597160583,"results":"10","hashOfConfig":"8"},{"size":89,"mtime":1609570674927,"results":"11","hashOfConfig":"8"},{"size":1972,"mtime":1609665766648,"results":"12","hashOfConfig":"8"},{"size":566,"mtime":1609597053168,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"fg4gw4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\index.js",[],["28","29"],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\components\\App.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\components\\Router.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\routes\\Home.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\routes\\Auth.js",["30","31"],"import React, { useState }from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        //const { name, value } = event.target;\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    \r\n    const onSubmit = async (event) => {\r\n        try {\r\n            let data;\r\n            event.preventDefault();\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} >\r\n                <input name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"LogIn\"\r\n                />\r\n            </form>\r\n            {error}\r\n            <div>\r\n                <button>LogIn with Google</button>\r\n                <button>Login with Github</button>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Auth;","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\study\\src\\fbase.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":24,"nodeType":"38","messageId":"39","endLine":7,"endColumn":37},{"ruleId":"36","severity":1,"message":"40","line":26,"column":17,"nodeType":"38","messageId":"39","endLine":26,"endColumn":21},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'setNewAccount' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]